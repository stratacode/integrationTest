<% if (!overrideField && !overrideGet) { %>
   <%=fieldModifiers%> <%=variableTypeName%> <%=lowerClassName%>;
<% } %>
<%=getModifiers%> <%=variableTypeName%> get<%=upperClassName%>(boolean doInit) {
<% if (overrideGet) { %>
   <%=variableTypeName%> <%=lowerClassName%> = super.get<%=upperClassName%>();
<% } %>
   if (<%=lowerClassName%> == null) {
      <%=variableTypeName%> _<%=lowerClassName%> = <% if (typeIsComponentClass) { %><%=typeClassName%>.new<%=typeBaseName%>(false, "<%=lowerClassName%>")<% } else { %>new <%=typeName%>("<%=lowerClassName%>")<% } %>;
      <%=lowerClassName%> = _<%=lowerClassName%>;

<% if (overrideGet) { %>
      set<%=upperClassName%>(_<%=lowerClassName%>);
<% } %>
     _<%=lowerClassName%>.preInit();
     <%=getDynamicTypeDefinition(lowerClassName, 2)%><%=propertyAssignments%>
     <% if (childrenNames != null && childrenNames.length() > 0) { %>
        java.util.List _children = java.util.Arrays.asList(<%=childrenNames%>);
     <% } %>
     if (doInit) {
       _<%=lowerClassName%>.init();
       _<%=lowerClassName%>.start();
     }
     <% if (childrenNames != null && childrenNames.length() > 0) { %>
        for (Object _child:_children) {
           if (_child instanceof org.apache.wicket.Page) 
              continue;
           if (_child instanceof org.apache.wicket.Component)
              _<%=lowerClassName%>.add((org.apache.wicket.Component) _child);
           else if (_child instanceof org.apache.wicket.behavior.IBehavior)
              _<%=lowerClassName%>.add((org.apache.wicket.behavior.IBehavior) _child);
        }
      <% } %> 
      return _<%=lowerClassName%>;
   }
   else {
      <%=variableTypeName%> _<%=lowerClassName%> = <%=returnCast%><%=lowerClassName%>;<%=accessHook%>
      return <%=lowerClassName%>;
   }
}
<%=getModifiers%> <%=variableTypeName%> get<%=upperClassName%>() { return get<%=upperClassName%>(true); }
